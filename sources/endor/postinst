#!/bin/sh

echo ""
echo "ENDOR POSTINST"
echo "==================="


cd /opt/lib/endor
tar -xzf long-filepaths.tar.gz

# This block sets up the machine as a real machine,
# that speaks to a physical embedded (i.e. not a 
# virtual machine)
#
if [ -e /opt/bin/calnex.endor.instrument.controller ]; then
    rm /opt/bin/calnex.endor.instrument.controller
fi

ln -s  /opt/bin/calnex.endor.instrument.controller.physicalinstrument /opt/bin/calnex.endor.instrument.controller 


# Stop the database server and wait for that to complete (it's not likely
# to be running, but this is belt-and-braces stuff)
/opt/etc/init.d/S95postgresql stop
sleep 3

# Now call postgres' postinst code to get the server configured, then
# start the database server running
#
/opt/lib/ipkg/info/postgresql.postinst
/opt/etc/init.d/S95postgresql start

# This loop waits for the database server to be available
#
echo "waiting for DB daemon to start"

pgdata=/opt/var/pgsql/data
wait_count=20

pg_ctl status -D $pgdata
pg_running=$?

while [ ${pg_running} -ne 0 ] && [ ${wait_count} -ne 0 ]
do
    echo "Database not running, waiting..."
    sleep 0.5
    pg_ctl status -D $pgdata
    pg_running=$?
    wait_count=$(expr $wait_count - 1)
done

# Exit if we have failed
#
if [ $wait_count -eq 0 ]; then
    echo "Failed to start database in Endor Postinst"
    exit 1
fi

# Note that we have succeeded
#
echo "Database running"

# Rebuild the database, exit if the script reports failure
python3 /opt/lib/endor/schema/Baseline/RebuildDb.py --superuser calnex --path /opt/lib/endor/schema/Baseline

database_build_status=$?
if [ $database_build_status -ne 0 ]; then
    exit $database_build_status
fi

# And if any saved data exists, put that into the database too
#
if [ -e /opt/lib/endor/utility/restore_persistent_data.py ]; then
    if [ -e /opt/var/lib/endor/endor_saved_state.txt ]; then
        echo "Restoring saved database settings"
        python3 /opt/lib/endor/utility/restore_persistent_data.py < /opt/var/lib/endor/endor_saved_state.txt
        rm -f ${HOME}/endor_saved_state.txt
    fi
fi

# Stop the database and finish
#
/opt/etc/init.d/S95postgresql stop
