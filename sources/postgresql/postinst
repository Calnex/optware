#!/bin/sh

export PATH=/opt/bin:/opt/sbin:$PATH

pghome="/opt/var/pgsql"
pgdata="$pghome/data"
pgver="$pghome/8.2"
pgdumpground="$pgver/dump"


echo ""
echo "POSTGRESQL POSTINST"
echo "==================="
echo "pghome:       ${pghome}"
echo ""
ls -l ${pghome}

echo "pgdata:       ${pgdata}"
ls -l ${pgdata}

echo "pgver:        ${pgver}"
ls -l ${pgver}

echo "pgdumpground: ${pgdumpground}"
ls -l ${pgdumpground}


echo "Process Dump"
ps aux

if [ ! -d $pghome ]
then
    mkdir -p $pghome
fi
if [ ! -d $pgdumpground ]
then
    mkdir -p $pgdumpground
fi

# initdb if not done before
dbinited=0
if [ -d $pgdata ]; then
    echo The $pgdata directory already exists
    dbinited=1
else
    echo "Initialize database ... "
    /opt/bin/initdb -D "$pgdata"
    [ -f $pgdata/PG_VERSION ] && echo "... database initialization done"
    dbinited=1
fi

# compatibility check and start db
echo "Listing /opt/etc/init.d/S95postgresql start"
cat /opt/etc/init.d/S95postgresql


echo "Calling /opt/etc/init.d/S95postgresql start"

/opt/etc/init.d/S95postgresql start

echo "Returned from call" 


if [ "$dbinited." = "1." -a -n "`pidof postmaster`" ]; then
    echo "Now database server is ready, you can test the connection by:"
    echo "	# su - postgres"
    echo "	$ /opt/bin/psql template1"
    echo "To allow access from other user, see http://www.postgresql.org/docs/8.2/interactive/sql-createuser.html"
    echo "To allow access from network, see http://developer.postgresql.org/docs/postgres/runtime-config.html#RUNTIME-CONFIG-CONNECTION"
fi

echo "Now doing postgress running loop"
echo "pgdata contains:"
ls -l $pgdata

echo "ls of root"
ls -l /

echo "ls of the tmp folder"
ls -l /tmp

pg_running=3
while [ $pg_running != 0 ]
do
    sleep 0.5
    pg_ctl status -D $pgdata
    pg_running=$?
done


psql -U calnex -d postgres -c "UPDATE pg_database SET datistemplate = FALSE WHERE datname = 'template1';"
psql -U calnex -d postgres -c "DROP DATABASE template1;"
psql -U calnex -d postgres -c "CREATE DATABASE template1 WITH TEMPLATE = template0 ENCODING = 'UNICODE';"
psql -U calnex -d postgres -c "UPDATE pg_database SET datistemplate = TRUE WHERE datname = 'template1';"
psql -U calnex -d template1 -c "VACUUM FREEZE;"
